import type { Metadata } from "next";
import "./globals.css";
import Image from "next/image";
import Link from "next/link";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

import { useState } from "react";
function Footer() {
  const [email, setEmail] = useState("");
  const [toast, setToast] = useState<{ type: "success" | "error"; msg: string } | null>(null);
  const [loading, setLoading] = useState(false);

  async function handleSubmit(e: React.FormEvent) {
    e.preventDefault();
    setLoading(true);
    setToast(null);
    try {
      const res = await fetch("/api/subscribe", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email }),
      });
      const data = await res.json();
      if (res.ok) {
        setToast({ type: "success", msg: "Subscribed! Check your inbox." });
        setEmail("");
      } else {
        setToast({ type: "error", msg: data.error || "Subscription failed." });
      }
    } catch {
      setToast({ type: "error", msg: "Network error." });
    } finally {
      setLoading(false);
      setTimeout(() => setToast(null), 4000);
    }
  }

  return (
    <footer className="w-full bg-black text-white flex flex-col items-center py-12 px-4 border-t border-neutral-800">
      <div className="flex flex-col items-center w-full max-w-[var(--container)]">
        <Image
          src="/nobillspnglogo.png"
          alt="NOBILLS three-head logo"
          width={160}
          height={60}
          className="mb-6 object-contain w-[120px] sm:w-[160px] h-auto"
          priority
        />
        {/* Newsletter */}
        <form
          className="w-full max-w-sm flex flex-col items-center gap-3 mb-8"
          onSubmit={handleSubmit}
        >
          <label htmlFor="newsletter" className="sr-only">
            Email address
          </label>
          <div className="flex w-full">
            <input
              id="newsletter"
              type="email"
              required
              placeholder="Your email"
              className="flex-1 px-4 py-2 rounded-l bg-neutral-900 text-white border border-neutral-700 focus:outline-none"
              aria-label="Email address"
              value={email}
              onChange={e => setEmail(e.target.value)}
              disabled={loading}
            />
            <button
              type="submit"
              className="px-5 py-2 rounded-r bg-neutral-800 border border-neutral-700 text-white font-medium hover:opacity-80 transition disabled:opacity-60"
              disabled={loading}
            >
              {loading ? "..." : "Sign Up"}
            </button>
          </div>
        </form>
        {/* Toast */}
        {toast && (
          <div
            className={`fixed bottom-8 left-1/2 -translate-x-1/2 px-4 py-2 rounded shadow-lg text-sm z-50 ${
              toast.type === "success"
                ? "bg-green-600 text-white"
                : "bg-red-600 text-white"
            }`}
            role="alert"
          >
            {toast.msg}
          </div>
        )}
        {/* Quick Links */}
        <nav className="flex flex-col sm:flex-row gap-4 justify-center items-center text-sm font-serif tracking-wide">
          <Link href="/about" className="hover:underline underline-offset-4 transition">About</Link>
          <Link href="/contact" className="hover:underline underline-offset-4 transition">Contact</Link>
          <a href="#" className="hover:underline underline-offset-4 transition">Follow</a>
        </nav>
      </div>
    </footer>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className="antialiased bg-black text-white">
        {children}
        <Footer />
      </body>
    </html>
  );
}
